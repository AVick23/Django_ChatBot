 // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
 const messageInput = document.getElementById('messageInput');
 const messageForm = document.getElementById('messageForm');
 const submitBtn = document.getElementById('submitBtn');
 const chatbox = document.getElementById('chatbox');
 const menuButton = document.getElementById('menuButton');
 const toggleButton = document.getElementById('theme-toggle');
 const icon = document.getElementById('icon');

 // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à–∏ –≤ –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
 messageInput.addEventListener('keydown', function(event) {
     if (event.key === 'Enter') {
         event.preventDefault();
         submitBtn.click();
     }
 });

 messageForm.addEventListener('submit', function(event) {
     event.preventDefault();
     const message = messageInput.value;
     messageInput.value = '';
 
     const userMessage = createMessageElement('user', message);
     const userSignature = createSignatureDiv('–í—ã');
     chatbox.appendChild(userSignature);
     chatbox.appendChild(userMessage);
     animateMessage(userMessage);
     userMessage.scrollIntoView();
 
     if (!sessionStorage.getItem('sessionId')) {
         sessionStorage.setItem('sessionId', Date.now());
     }
     var sessionId = sessionStorage.getItem('sessionId');  
 
     fetch('/', {
         method: 'POST',
         headers: {
             'Content-Type': 'application/json',
             'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value,
         },
         body: JSON.stringify({ message: message }),
     })
     .then(response => response.json())
     .then(data => {
         const botSignature = createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç');
         chatbox.appendChild(botSignature);
 
         if (data.suggestedQuestions && data.suggestedQuestions.length > 0) {
             const suggestionMessage = createMessageElement('bot', '–ú–æ–∂–µ—Ç –±—ã—Ç—å, –≤—ã –∏–º–µ–ª–∏ –≤ –≤–∏–¥—É —ç—Ç–æ?');
             chatbox.appendChild(suggestionMessage);
 
             data.suggestedQuestions.forEach(question => {
                 const buttonElement = document.createElement('button'); // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
                 buttonElement.textContent = question.question; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
                 buttonElement.classList.add('custom-button'); // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –∫–Ω–æ–ø–∫–µ –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
 
                 // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É
                 buttonElement.addEventListener('click', function() {
                     const userQuestion = question.question;
                     const botAnswer = question.answer;
 
                     const userQuestionMessage = createMessageElement('user', userQuestion);
                     const userSignature = createSignatureDiv('–í—ã');
                     chatbox.appendChild(userSignature);
                     chatbox.appendChild(userQuestionMessage);
                     animateMessage(userQuestionMessage);
                     userQuestionMessage.scrollIntoView();
 
                     const botAnswerMessage = createMessageElement('bot', ''); // –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞
                     const botSignature = createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç');
                     chatbox.appendChild(botSignature);
                     chatbox.appendChild(botAnswerMessage); // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ —Å –æ—Ç–≤–µ—Ç–æ–º
                     animateMessage(botAnswerMessage);
                     botAnswerMessage.scrollIntoView();
 
                     // –í—ã–≤–æ–¥–∏–º –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
                     let i = 0;
                     const typing = setInterval(function() {
                         if (i < botAnswer.length) {
                             botAnswerMessage.textContent += botAnswer[i];
                             i++;
                         } else {
                             clearInterval(typing);
                             
                             // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ –æ—Ç–≤–µ—Ç–µ –±–æ—Ç–∞ URL-—ã
                             if (typeof botAnswer === 'string') {
                                 var urlRegex = /(https?:\/\/[^\s]+)/g;
                                 var urls = botAnswer.match(urlRegex);
                                 if (urls) {
                                     // –í—ã–≤–æ–¥–∏–º —Å—Å—ã–ª–∫–∏
                                     urls.forEach(function(url) {
                                         botAnswerMessage.innerHTML +=  `<br><a href="${url}" target="_blank" rel="noopener noreferrer" title="–≠—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ ${url}">–ü–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ</a><br>`;
                                     });
                                 }
                             }
                         }
                     },20);
                 });
 
                 const buttonContainer = document.createElement('div'); // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–Ω–æ–ø–∫–∏
                 buttonContainer.classList.add('button-container'); // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—É –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
                 buttonContainer.appendChild(buttonElement); // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
 
                 // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –∫–Ω–æ–ø–∫–æ–π –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –±–æ—Ç–∞
                 suggestionMessage.appendChild(buttonContainer);
             });
         } else {
             // –ï—Å–ª–∏ –Ω–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤, –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç–∞
             const botMessage = createMessageElement('bot', data.response);
             chatbox.appendChild(botMessage);
             animateMessage(botMessage);
             botMessage.scrollIntoView();
         }
 
         // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–µ—Å—Å–∏–∏
         saveMessage(sessionId, message, true);
         saveMessage(sessionId, data.response, false);
     });
 });
 
 
 
 
 

 // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
 function saveMessage(sessionId, message, isUser) {
     fetch('/save_message/', {
         method: 'POST',
         headers: {
             'Content-Type': 'application/json',
             'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value,
         },
         body: JSON.stringify({
             sessionId: sessionId,
             message: message,
             isUser: isUser,
             signature: isUser ? '–í—ã' : '–ß–∞—Ç-–ë–æ—Ç'
         }),
     });
 }

 // window.onload = function() {
 //     var sessionId = sessionStorage.getItem('sessionId');  

 //     // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞
 //     fetch('/load_chat/', {
 //         method: 'POST',
 //         headers: {
 //             'Content-Type': 'application/json',
 //             'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value,
 //         },
 //         body: JSON.stringify({
 //             sessionId: sessionId
 //         }),
 //     })
 //     .then(response => response.json())
 //     .then(data => {
 //         data.messages.forEach(function(message) {
 //             const messageElement = createMessageElement(message.isUser ? 'user' : 'bot', message.text);
 //             const signature = document.createElement('div');
 //             signature.textContent = message.signature || ''; // –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è —Å–ª—É—á–∞—è, –µ—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∏ –Ω–µ—Ç
 //             messageElement.appendChild(signature);
 //             chatbox.appendChild(messageElement);
 //             animateMessage(messageElement);
 //         });
 //     });
 // };
     
 // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é
 menuButton.addEventListener('click', function(event) {
     event.preventDefault();
     
     // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–ª–∞—Å—Å–æ–º 'removable'
     var removableMessages = document.getElementsByClassName('removable');
     while(removableMessages[0]) {
         removableMessages[0].parentNode.removeChild(removableMessages[0]);
     }

     const botMessage = createMessageElement('bot', '–í—ã –æ—Ç–∫—Ä—ã–ª–∏ –º–µ–Ω—é —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º:');
     botMessage.classList.add('removable');
     const botSignature = createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç');
     chatbox.appendChild(botSignature); 
     chatbox.appendChild(botMessage);
     botMessage.scrollIntoView();
     
     // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
     const all_buttons = [{
             "id": "button1",
             "text": "üìò–ü–æ–¥–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É",
             "class": "custom-button",
             "title": "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–∫—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É –¥–ª—è —Å–µ–±—è."
         },
         {
             "id": "button2",
             "text": "üìï–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ",
             "class": "custom-button",
             "title": "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ, –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ç–æ—á–Ω–æ –∑–Ω–∞–µ—Ç–µ."
         },
         {
             "id": "button3",
             "text": "‚ùì–í–æ–ø—Ä–æ—Å –ø—Ä–∏—ë–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏",
             "class": "custom-button",
             "title": "–ù–∞–∂–º–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–Ω–æ–ø–∫—É, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –∑–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –ø—Ä–∏—ë–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏, –º—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ, –∞ –º–æ–∂–µ—Ç —É –Ω–∞—Å –Ω–∞–π–¥—ë—Ç —É–∂–µ –æ—Ç–≤–µ—Ç –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å."
         }
     ];
     for (let button of all_buttons) {
         const buttonElement = document.createElement('button');
         buttonElement.id = button.id;
         buttonElement.className = button.class;
         buttonElement.textContent = button.text;
         botMessage.appendChild(buttonElement);

         if (button.title) {
             const infoIcon = document.createElement('i');
             infoIcon.className = 'info-icon';
             infoIcon.textContent = 'i';

             const modal = document.createElement('div');
             modal.className = 'modal';
             const modalContent = document.createElement('div');
             modalContent.className = 'modal-content';
             modalContent.textContent = button.title;
             modal.appendChild(modalContent);
             document.body.appendChild(modal);

             infoIcon.addEventListener('click', function() {
                 modal.style.display = 'block';
             });

             window.addEventListener('click', function(event) {
                 if (event.target == modal) {
                     modal.style.display = 'none';
                 }
             });

             botMessage.appendChild(infoIcon);
         }

         botMessage.appendChild(document.createElement('br'));
     }
     
     // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –¥–ª—è button1
     document.getElementById('button1').addEventListener('click', function(event) {
         event.preventDefault();
         var educationMessage = createMessageElement('bot', '–í—ã–±–µ—Ä–∏—Ç–µ –æ–±–ª–∞—Å—Ç—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è:');
         educationMessage.appendChild(document.createElement('br'));
         botMessage.classList.add('removable');
         var all_areas = [
             "–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞—É–∫–∏", "–ò–Ω–∂–µ–Ω–µ—Ä–Ω–æ–µ –¥–µ–ª–æ, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞—É–∫–∏", "–ó–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –º–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–µ –Ω–∞—É–∫–∏",
             "–°–µ–ª—å—Å–∫–æ–µ —Ö–æ–∑—è–π—Å—Ç–≤–æ –∏ —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞—É–∫–∏", "–ù–∞—É–∫–∏ –æ–± –æ–±—â–µ—Å—Ç–≤–µ", "–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –∏ –ø–µ–¥–∞–≥–æ–≥–∏—á–µ—Å–∫–∏–µ –Ω–∞—É–∫–∏",
             "–ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω—ã–µ –Ω–∞—É–∫–∏", "–ò—Å—Å–∫—É—Å—Ç–≤–∞ –∏ –∫—É–ª—å—Ç—É—Ä–∞"
         ];
         for (var i = 0; i < all_areas.length; i++) {
             var areaButton = document.createElement('button');
             areaButton.className = 'custom-button education-button';
             areaButton.textContent = all_areas[i];
             educationMessage.appendChild(areaButton);
             educationMessage.appendChild(document.createElement('br')); // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–∏
         }
         educationMessage.classList.add('removable');
         const botSignature = createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç');
         chatbox.appendChild(botSignature); 
         chatbox.appendChild(educationMessage);
         educationMessage.scrollIntoView();
         
         var educationButtons = document.getElementsByClassName('education-button');
         for (var i = 0; i < educationButtons.length; i++) {
             educationButtons[i].addEventListener('click', function(event) {
                 event.preventDefault();
                 var area = event.target.innerText; // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –æ–±–ª–∞—Å—Ç—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
                 var subjectMessage = createMessageElement('bot', '–í—ã –≤—ã–±—Ä–∞–ª–∏ –æ–±–ª–∞—Å—Ç—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è: ' + area + '. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç:');
                 educationMessage.classList.add('removable');
                 var all_subjects = [
                     "–ë–∏–æ–ª–æ–≥–∏—è", "–ì–µ–æ–≥—Ä–∞—Ñ–∏—è", "–ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫", "–ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞", "–ò—Å—Ç–æ—Ä–∏—è", "–ö–ª–∞—É–∑—É—Ä–∞", "–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞", "–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞",
                     "–ú—É–∑—ã–∫–∞–ª—å–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ —ç—Å—Ç—Ä–∞–¥—ã", "–û–±—â–µ—Å—Ç–≤–æ–∑–Ω–∞–Ω–∏–µ", "–û—Å–Ω–æ–≤—ã –º–µ–¥–∏–∞", "–†–∏—Å—É–Ω–æ–∫", "–†—É—Å—Å–∫–∏–π —è–∑—ã–∫", "–°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ",
                     "–°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –≥—Ä–∞—Ñ–∏–∫–∞", "–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç", "–§–∏–∑–∏–∫–∞", "–§–∏–∑–∏—á–µ—Å–∫–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞", "–•–∏–º–∏—è", "–•—É–¥–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–æ"
                 ];
                 var table = document.createElement('table');
                 for (var j = 0; j < all_subjects.length; j += 2) {
                     var row = document.createElement('tr');
                     var cell1 = document.createElement('td');
                     var cell2 = document.createElement('td');
                     cell1.innerHTML = '<button class="custom-button" data-selected="false">' + all_subjects[j] + '</button>';
                     if (j + 1 < all_subjects.length) {
                         cell2.innerHTML = '<button class="custom-button" data-selected="false">' + all_subjects[j + 1] + '</button>';
                     }
                     row.appendChild(cell1);
                     row.appendChild(cell2);
                     table.appendChild(row);
                 }
                 subjectMessage.appendChild(table);
                 subjectMessage.classList.add('removable');
                 const botSignature = createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç');
                 chatbox.appendChild(botSignature);
                 chatbox.appendChild(subjectMessage);
                 subjectMessage.scrollIntoView();
                 
                 // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–∏
                 var buttons = document.getElementsByClassName('custom-button');
                 for (var i = 0; i < buttons.length; i++) {
                     buttons[i].addEventListener('click', function(event) {
                         var button = event.target;
                         var isSelected = button.getAttribute('data-selected') === 'true';
                         button.setAttribute('data-selected', !isSelected);
                         button.style.backgroundColor = isSelected ? '#0B93F6' : '#777'; // –º–µ–Ω—è–µ–º —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –∫–Ω–æ–ø–∫–∏
                     });
                 }
                 
                 // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                 var confirmButton = document.createElement('button');
                 confirmButton.className = 'custom-button confirm-button';
                 confirmButton.textContent = '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–±–æ—Ä';
                 subjectMessage.appendChild(confirmButton);

                             // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–∫–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
                 confirmButton.addEventListener('click', function(event) {
                     event.preventDefault();
                     var selectedSubjects = []; // –º–∞—Å—Å–∏–≤ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤
                     var buttons = document.getElementsByClassName('custom-button');
                     for (var i = 0; i < buttons.length; i++) {
                         if (buttons[i].getAttribute('data-selected') === 'true') {
                             selectedSubjects.push(buttons[i].textContent);
                         }
                     }
                 
                     // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
                     var formMessage = createMessageElement('bot', '–í—ã –≤—ã–±—Ä–∞–ª–∏ –ø—Ä–µ–¥–º–µ—Ç—ã: ' + selectedSubjects.join(', ') + '. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º—É –æ–±—É—á–µ–Ω–∏—è:');
                     formMessage.innerHTML += '<br>';
                     botMessage.classList.add('removable');
                 
                     var all_forms = ["–û—á–Ω–∞—è —Ñ–æ—Ä–º–∞", "–ó–∞–æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞", "–û—á–Ω–æ-–∑–∞–æ—á–Ω–∞—è —Ñ–æ—Ä–º–∞"];
                     for (var j = 0; j < all_forms.length; j++) {
                         formMessage.innerHTML += '<button class="custom-button form-button">' + all_forms[j] + '</button><br>'; // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–∏
                     }
                     
                     formMessage.classList.add('removable');
                     const botSignature = createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç');
                     chatbox.appendChild(botSignature);
                     chatbox.appendChild(formMessage);
                     formMessage.scrollIntoView();
                 
                     var formButtons = document.getElementsByClassName('form-button');
                     for (var i = 0; i < formButtons.length; i++) {
                         formButtons[i].addEventListener('click', function(event) {
                             event.preventDefault();
                             var form = event.target.innerText; // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ñ–æ—Ä–º—É –æ–±—É—á–µ–Ω–∏—è
                             var paymentMessage = createMessageElement('bot', '–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ñ–æ—Ä–º—É –æ–±—É—á–µ–Ω–∏—è: ' + form + '. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ä–º—É –æ–ø–ª–∞—Ç—ã:');
                             botMessage.classList.add('removable');
                             paymentMessage.innerHTML += '<br>';
                             var all_payment_options = ["–ë—é–¥–∂–µ—Ç", "–ö–æ–º–º–µ—Ä—Ü–∏—è"];
                             for (var j = 0; j < all_payment_options.length; j++) {
                                 paymentMessage.innerHTML += '<button class="custom-button payment-button">' + all_payment_options[j] + '</button><br>'; // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–∏
                             }
                             paymentMessage.classList.add('removable');
                             const botSignature = createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç');
                             chatbox.appendChild(botSignature);
                             chatbox.appendChild(paymentMessage);
                             paymentMessage.scrollIntoView();
                             
                             var paymentButtons = document.getElementsByClassName('payment-button');
                             for (var i = 0; i < paymentButtons.length; i++) {
                                 paymentButtons[i].addEventListener('click', function(event) {
                                     event.preventDefault();
                                     var payment = event.target.innerText; // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ñ–æ—Ä–º—É –æ–ø–ª–∞—Ç—ã
                                     var searchMessage = createMessageElement('bot', '–í—ã –≤—ã–±—Ä–∞–ª–∏ —Ñ–æ—Ä–º—É –æ–ø–ª–∞—Ç—ã: ' + payment + '. –¢–µ–ø–µ—Ä—å –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–∏—Å–∫–∞:');
                                     botMessage.classList.add('removable');
                                     searchMessage.innerHTML += '<br>';
                                     var all_search_types = [
                                         { 
                                             text: "–°—Ç—Ä–æ–≥–∏–π", 
                                             description: "–í—ã–±–µ—Ä–∏—Ç–µ —ç—Ç–æ—Ç —Ç–∏–ø –ø–æ–∏—Å–∫–∞, –µ—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω—ã —Å—Ç—Ä–æ–≥–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞." 
                                         },
                                         { 
                                             text: "–ì–∏–±–∫–∏–π", 
                                             description: "–í—ã–±–µ—Ä–∏—Ç–µ —ç—Ç–æ—Ç —Ç–∏–ø –ø–æ–∏—Å–∫–∞, –µ—Å–ª–∏ –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ –≥–∏–±–∫–∏–µ –∫—Ä–∏—Ç–µ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞." 
                                         }
                                     ];
                                     
                                     // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Ç–∏–ø–æ–≤ –ø–æ–∏—Å–∫–∞
                                     // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Ç–∏–ø–æ–≤ –ø–æ–∏—Å–∫–∞
                                     for (var j = 0; j < all_search_types.length; j++) {
                                         const searchContainer = document.createElement('div'); // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
                                         searchContainer.className = 'search-container';
                                     
                                         const searchButton = document.createElement('button');
                                         searchButton.className = 'custom-button search-button';
                                         searchButton.textContent = all_search_types[j].text;
                                     
                                         // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É —Ç–∏–ø–∞ –ø–æ–∏—Å–∫–∞ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
                                         searchContainer.appendChild(searchButton);
                                     
                                         // –°–æ–∑–¥–∞–µ–º –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É "i" –∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
                                         if (all_search_types[j].description) {
                                             const infoIcon = document.createElement('i');
                                             infoIcon.className = 'info-icon';
                                             infoIcon.textContent = 'i';
                                     
                                             const modal = document.createElement('div');
                                             modal.className = 'modal';
                                             const modalContent = document.createElement('div');
                                             modalContent.className = 'modal-content';
                                             modalContent.textContent = all_search_types[j].description;
                                             modal.appendChild(modalContent);
                                             document.body.appendChild(modal);
                                     
                                             // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∏–∫–æ–Ω–∫—É "i"
                                             infoIcon.addEventListener('click', function() {
                                                 modal.style.display = 'block';
                                             });
                                     
                                             // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –Ω–µ–≥–æ
                                             window.addEventListener('click', function(event) {
                                                 if (event.target == modal) {
                                                     modal.style.display = 'none';
                                                 }
                                             });
                                     
                                             // –î–æ–±–∞–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
                                             searchContainer.appendChild(infoIcon);
                                         }
                                     
                                         searchMessage.appendChild(searchContainer); // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –≤ —Å–æ–æ–±—â–µ–Ω–∏–µ
                                         searchMessage.appendChild(document.createElement('br'));
                                     }
                                     
                                     // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –ø–æ–∏—Å–∫–∞ –∫ —á–∞—Ç—É
                                     searchMessage.classList.add('removable');
                                     const botSignature = createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç');
                                     chatbox.appendChild(botSignature);
                                     chatbox.appendChild(searchMessage);
                                     searchMessage.scrollIntoView();                                    

                                     var searchButtons = document.getElementsByClassName('search-button');
                                     for (var i = 0; i < searchButtons.length; i++) {
                                         searchButtons[i].addEventListener('click', function(event) {
                                             event.preventDefault();
                                             var searchType = event.target.innerText; // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∏–ø –ø–æ–∏—Å–∫–∞

                                             // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
                                             fetch('/get_programs/', {
                                                 method: 'POST',
                                                 headers: {
                                                     'Content-Type': 'application/json',
                                                     'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value,
                                                 },
                                                 body: JSON.stringify({
                                                     area: area,
                                                     subjects: selectedSubjects,
                                                     form: form,
                                                     payment: payment,
                                                     search_type: searchType
                                                 }),
                                             })
                                             .then(response => response.json())
                                             .then(data => {
                                                 // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ–¥—Ö–æ–¥—è—â–∏–º–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏
                                                 var directionsMessage = createMessageElement('bot', '–ü–æ–¥—Ö–æ–¥—è—â–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:');
                                                 directionsMessage.innerHTML += '<br>';

                                                 // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Å –ø–æ–¥—Ö–æ–¥—è—â–∏–º–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏
                                                 for (var j = 0; j < data.length; j++) {
                                                     var directionButton = document.createElement('button');
                                                     directionButton.className = 'custom-button direction-button';
                                                     directionButton.textContent = data[j];
                                                     directionButton.addEventListener('click', function(event) {
                                                         event.preventDefault();
                                                         var direction = event.target.innerText; // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
                                             
                                                         // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º
                                                         fetch('/get_direction_info/', {
                                                             method: 'POST',
                                                             headers: {
                                                                 'Content-Type': 'application/json',
                                                                 'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value,
                                                             },
                                                             body: JSON.stringify({
                                                                 direction: direction
                                                             }),
                                                         })
                                                         .then(response => response.json())
                                                         .then(data => {
                                                             // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—ä–µ–∫—Ç data –≤ —Å—Ç—Ä–æ–∫—É
                                                             var dataString = JSON.stringify(data, null, 2);  // –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç null –∏ —Ç—Ä–µ—Ç–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç 2 –¥–µ–ª–∞—é—Ç –≤—ã–≤–æ–¥ –±–æ–ª–µ–µ —á–∏—Ç–∞–µ–º—ã–º

                                                             dataString = dataString.replace(/\\n/g, '<br>');

                                                             // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ URL
                                                             var urlRegex = /(https?:\/\/[^\s]+)/g;

                                                             // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Å—Å—ã–ª–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ JSON
                                                             var urls = dataString.match(urlRegex);

                                                             // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è —Å—Å—ã–ª–æ–∫
                                                             var linkString = '';

                                                             // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–º —Å—Å—ã–ª–∫–∞–º
                                                             for (var i = 0; i < urls.length; i++) {
                                                                 // –£–¥–∞–ª—è–µ–º –≤—Å–µ <br> –∏–∑ –Ω–∞–π–¥–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–∏
                                                                 var url = urls[i].replace(/<br>/g, '');
                                                                 
                                                                 // –î–æ–±–∞–≤–ª—è–µ–º HTML-—Å—Å—ã–ª–∫—É –≤ —Å—Ç—Ä–æ–∫—É —Å—Å—ã–ª–æ–∫
                                                                 linkString += `<br><a href="${url}" target="_blank" rel="noopener noreferrer" title="–≠—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ ${url}">–ü–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ</a><br>`;
                                                             }

                                                             // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É —Å—Å—ã–ª–æ–∫ –≤ –∫–æ–Ω–µ—Ü –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
                                                             dataString += linkString;

                                                             // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ –≤—Å–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
                                                             var directionInfoMessage = createMessageElement('bot', dataString);
                                                             const botSignature = createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç');
                                                             chatbox.appendChild(botSignature);
                                                             chatbox.appendChild(directionInfoMessage);
                                                             directionInfoMessage.innerHTML = dataString;
                                                         });
                                                     });
                                                     directionsMessage.appendChild(directionButton);
                                                     directionsMessage.appendChild(document.createElement('br')); // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –∫–Ω–æ–ø–∫–∏
                                                 }
                                                 directionsMessage.classList.add('removable');
                                                 const botSignature = createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç');
                                                 chatbox.appendChild(botSignature);
                                                 chatbox.appendChild(directionsMessage);
                                                 directionsMessage.scrollIntoView();
                                             });
                                         });
                                     }
                                 });
                             }
                         });
                     }
                 });
             });
         }
     });
     // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –¥–ª—è button2
     document.getElementById('button2').addEventListener('click', function(event) {
         event.preventDefault();
         
         // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ –∏ –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞
         var botMessage = createMessageElement('bot', '–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ª—é–±–æ–π –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã');
         botMessage.classList.add('removable');
         var inputField = document.createElement('input');
         inputField.setAttribute('id', 'direction-input');
         inputField.setAttribute('class', 'messageInputTap');
         inputField.setAttribute('placeholder', '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã'); // –î–æ–±–∞–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç placeholder
         botMessage.appendChild(inputField);

         const botSignature = createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç');
         chatbox.appendChild(botSignature);
         chatbox.appendChild(botMessage);
         botMessage.scrollIntoView();
         
         // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞
         document.getElementById('direction-input').addEventListener('change', function(event) {
             var direction = event.target.value; // –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
             
             // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º
             fetch('/get_direction_info/', {
                 method: 'POST',
                 headers: {
                     'Content-Type': 'application/json',
                     'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value,
                 },
                 body: JSON.stringify({
                     direction: direction
                 }),
             })
             .then(response => response.json())
             .then(data => {
                 // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—ä–µ–∫—Ç data –≤ —Å—Ç—Ä–æ–∫—É
                 var dataString = JSON.stringify(data, null, 2);  // –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç null –∏ —Ç—Ä–µ—Ç–∏–π –∞—Ä–≥—É–º–µ–Ω—Ç 2 –¥–µ–ª–∞—é—Ç –≤—ã–≤–æ–¥ –±–æ–ª–µ–µ —á–∏—Ç–∞–µ–º—ã–º

                 dataString = dataString.replace(/\\n/g, '<br>');

                 // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ URL
                 var urlRegex = /(https?:\/\/[^\s]+)/g;
                 
                 // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ —Å—Å—ã–ª–∫–∏ –≤ —Å—Ç—Ä–æ–∫–µ JSON
                 var urls = dataString.match(urlRegex);

                 // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –¥–ª—è —Å—Å—ã–ª–æ–∫
                 var linkString = '';

                 // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –≤—Å–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–º —Å—Å—ã–ª–∫–∞–º
                 for (var i = 0; i < urls.length; i++) {
                     // –£–¥–∞–ª—è–µ–º –≤—Å–µ <br> –∏–∑ –Ω–∞–π–¥–µ–Ω–Ω–æ–π —Å—Å—ã–ª–∫–∏
                     var url = urls[i].replace(/<br>/g, '');
                     
                     // –î–æ–±–∞–≤–ª—è–µ–º HTML-—Å—Å—ã–ª–∫—É –≤ —Å—Ç—Ä–æ–∫—É —Å—Å—ã–ª–æ–∫
                     linkString += `<br><a href="${url}" target="_blank" rel="noopener noreferrer" title="–≠—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–∞ ${url}">–ü–µ—Ä–µ–π—Ç–∏ –ø–æ —Å—Å—ã–ª–∫–µ</a><br>`;
                 }

                 // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫—É —Å—Å—ã–ª–æ–∫ –≤ –∫–æ–Ω–µ—Ü –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
                 dataString += linkString;

                 // –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ –≤—Å–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
                 var directionInfoMessage = createMessageElement('bot', dataString);
                 const botSignature = createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç');
                 chatbox.appendChild(botSignature);
                 chatbox.appendChild(directionInfoMessage);
                 directionInfoMessage.innerHTML = dataString;
             });
         });
     });

     document.getElementById('button3').addEventListener('click', function(event) {
         event.preventDefault();
         
         var questionMessage = createMessageElement('bot', '–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –¥–ª—è –ø—Ä–∏—ë–º–Ω–æ–π –∫–æ–º–∏—Å–∏–∏:');
         questionMessage.classList.add('removable'); // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å 'removable' –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
         var inputElement = document.createElement('input');
         inputElement.setAttribute('id', 'questionInput');
         inputElement.setAttribute('class', 'messageInputTap');
         inputElement.setAttribute('placeholder', '–í–≤–µ–¥–∏—Ç–µ —Å—é–¥–∞ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å'); // –î–æ–±–∞–≤–ª—è–µ–º –∞—Ç—Ä–∏–±—É—Ç placeholder
         questionMessage.appendChild(inputElement);

         const botSignature = createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç');
         chatbox.appendChild(botSignature);
         chatbox.appendChild(questionMessage);
         questionMessage.scrollIntoView();
         
         // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞
         document.getElementById('questionInput').addEventListener('change', function(event) {
             event.preventDefault();
             var question = event.target.value;
             var user_id = 1
             
             var data = {
                 question: question,
                 user_id: user_id
             };
             
             fetch('/save_question/', {
                 method: 'POST',
                 headers: {
                     'Content-Type': 'application/json',
                     'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value,
                 },
                 body: JSON.stringify(data),
             })
             .then(response => response.json())
             .then(data => {
                 var similarQuestions = data.similar_questions;
                 
             // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏
             var newMessage = createMessageElement('bot', '–í–∞—à –≤–æ–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Ä–∞—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –ø—Ä–∏—ë–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏. –ê –ø–æ–∫–∞ —è –Ω–∞—à—ë–ª –ø–æ—Ö–æ–∂–∏–µ –≤–æ–ø—Ä–æ—Å—ã —Å –≥–æ—Ç–æ–≤—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏:');
             for (var i = 0; i < similarQuestions.length; i++) {
                 var questionButton = document.createElement('button');
                 questionButton.textContent = similarQuestions[i];
                 questionButton.setAttribute('class', 'custom-button'); // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å .custom-button
                 newMessage.appendChild(questionButton);
             }
             const botSignature = createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç');
             chatbox.appendChild(botSignature);
             chatbox.appendChild(newMessage);
             newMessage.scrollIntoView();
                 
                 // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–∫–∏
                 questionButton.addEventListener('click', function(event) {
                     event.preventDefault();
                     var questionText = event.target.textContent;
                     
                     var data = {
                         question_text: questionText
                     };
                     
                     fetch('/get_answer/', {
                         method: 'POST',
                         headers: {
                             'Content-Type': 'application/json',
                             'X-CSRFToken': document.querySelector('[name=csrfmiddlewaretoken]').value,
                         },
                         body: JSON.stringify(data),
                     })
                     .then(response => response.json())
                     .then(data => {
                         var answer = data.answer;
                         // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—Ç–≤–µ—Ç–æ–º
                         var answerMessage = createMessageElement('bot', answer);
                         const botSignature = createSignatureDiv('–ß–∞—Ç-–ë–æ—Ç');
                         chatbox.appendChild(botSignature);
                         chatbox.appendChild(answerMessage);
                         answerMessage.scrollIntoView();
                     });
                 });                       
             });
         });
     });            
 });

 // –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 function createMessageElement(className, text) {
     const messageElement = document.createElement('p');
     messageElement.className = `message ${className}`;
     messageElement.textContent = text;
     return messageElement;
 }

 function createSignatureElement(sender) {
     const signatureElement = document.createElement('p');
     signatureElement.classList.add('signature');
     signatureElement.textContent = sender;
     return signatureElement;
 }

 function createSignatureDiv(author) {
     const signature = document.createElement('div');
     signature.textContent = author;
     if (author === '–í—ã') {
         signature.classList.add('user-signature');
     } else {
         signature.classList.add('bot-signature');
     }
     return signature;
 }        

 // –°–æ–∑–¥–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
 function animateMessage(messageElement) {
     const keyframes = [
         { transform: 'translateY(100%)', opacity: 0 },
         { transform: 'translateY(0)', opacity: 1 }
     ];
     const options = {
         duration: 500,
         easing: 'ease-out'
     };
     messageElement.animate(keyframes, options);
 }

 function createSignatureDiv(author) {
     const signature = document.createElement('div');
     signature.textContent = author;
     if (author === '–í—ã') {
         signature.classList.add('user-signature');
     } else {
         signature.classList.add('bot-signature');
     }
     return signature;
 }        

 // –°–æ–∑–¥–∞–µ—Ç –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
 function animateMessage(messageElement) {
     const keyframes = [
         { transform: 'translateY(100%)', opacity: 0 },
         { transform: 'translateY(0)', opacity: 1 }
     ];
     const options = {
         duration: 500,
         easing: 'ease-out'
     };
     messageElement.animate(keyframes, options);
 }

 // –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏
 function initializeSpeechRecognition() {
     if ('webkitSpeechRecognition' in window) {
         var recognition = new webkitSpeechRecognition();
         recognition.lang = "ru-RU";
         recognition.onresult = handleRecognitionResult;
         recognition.onerror = handleRecognitionError;
         recognition.onstart = handleRecognitionStart;
         recognition.onend = handleRecognitionEnd;
         return recognition;
     } else {
         console.error('–ë—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏.');
         return null;
     }
 }

 // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
 function handleRecognitionResult(event) {
     var transcript = event.results[0][0].transcript;
     var messageInput = document.querySelector('#messageInput');
     messageInput.value = transcript;
     recognition.stop();

     // –°–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–Ω–æ–≥–æ –Ω–∞–∂–∞—Ç–∏—è –∫–ª–∞–≤–∏—à–∏ Enter
     var enterEvent = new KeyboardEvent('keydown', {
         key: 'Enter',
         keyCode: 13,
         bubbles: true,
         cancelable: true
     });

     // –î–∏—Å–ø–∞—Ç—á–∏–º —Å–æ–±—ã—Ç–∏–µ –Ω–∞ –ø–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
     messageInput.dispatchEvent(enterEvent);
 }

 // –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥—Ä—É–≥–∏—Ö —Å–æ–±—ã—Ç–∏–π —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
 function handleRecognitionError(event) {
 console.error('–û—à–∏–±–∫–∞ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏: ', event.error);
 }

 function handleRecognitionStart() {
 document.querySelector('#mic').classList.add('active');
 }

 function handleRecognitionEnd() {
 document.querySelector('#mic').classList.remove('active');
 }

 // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ä–µ—á–∏
 var recognition = initializeSpeechRecognition();

 // –ü–æ–ª—É—á–∞–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
 var micButton = document.querySelector('#mic');

 // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –º–∏–∫—Ä–æ—Ñ–æ–Ω–∞
 micButton.addEventListener('click', function() {
     if (recognition && recognition.state === 'running') {
         // –ï—Å–ª–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–æ, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–≥–æ
         recognition.stop();
     } else {
         // –ï—Å–ª–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–µ—á–∏ –Ω–µ –∑–∞–ø—É—â–µ–Ω–æ, –∑–∞–ø—É—Å–∫–∞–µ–º –µ–≥–æ
         recognition.start();
     }
 });

 const darkCssPath = 'dark.css';
 const lightCssPath = 'light.css';

 toggleButton.addEventListener('click', function() {
     const currentTheme = document.documentElement.getAttribute('data-theme');
     const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
 
     document.documentElement.setAttribute('data-theme', newTheme);
 
     // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Å—Ç–∏–ª—å, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
     const oldStyle = document.getElementById('theme-style');
     if (oldStyle) {
         document.head.removeChild(oldStyle);
     }
 
     // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Å—Ç–∏–ª—å
     const style = document.createElement('style');
     style.id = 'theme-style';
 
     // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å—Ç–∏–ª–µ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º—ã
     const cssFilePath = newTheme === 'dark' ? darkCssPath : lightCssPath;
 
     // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤—ã–π —Å—Ç–∏–ª—å
     fetch(cssFilePath)
         .then(response => response.text())
         .then(css => {
             style.textContent = css;
             document.head.appendChild(style);
         });
 
     // –ú–µ–Ω—è–µ–º –∏–∫–æ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ç–µ–º—ã
     if (newTheme === 'dark') {
         icon.classList.remove('sun');
         icon.classList.add('moon');
         icon.style.left = '35px';
     } else {
         icon.classList.remove('moon');
         icon.classList.add('sun');
         icon.style.left = '0';
     }
 });
 
   
   window.onscroll = function() {scrollFunction()};

   function scrollFunction() {
     var scrollToBottom = document.getElementById("scrollToBottom");
   
     // –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä–µ–ª–æ—á–∫—É, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ–∫—Ä—É—Ç–∏–ª –≤–≤–µ—Ä—Ö –Ω–∞ 20 –ø–∏–∫—Å–µ–ª–µ–π
     if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
       scrollToBottom.style.display = "block";
     } else {
       scrollToBottom.style.display = "none";
     }
   }
   
   // –ü–ª–∞–≤–Ω–∞—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤–Ω–∏–∑ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ —Å—Ç—Ä–µ–ª–æ—á–∫—É
   document.getElementById("scrollToBottom").onclick = function() {
     scrollToBottom();
   };
   
   function scrollToBottom() {
     window.scroll({
       top: document.body.scrollHeight,
       behavior: 'smooth'
     });
   }